#ifndef __REDCURRANT__metautils_notifications__h
# define __REDCURRANT__metautils_notifications__h 1

#include <glib.h>
#include <metautils/lib/metautils.h>

// Kafka docs says that 10000 partitions is huge but should work
#define MAX_TOPIC_PARTITIONS 16384

struct metautils_notif_pool_s;
typedef struct metautils_notif_pool_s metautils_notif_pool_t;

typedef GError *(*notifier_configure)(const namespace_info_t *nsinfo,
		struct grid_lbpool_s *lbpool, GSList *topics, gpointer *handle);
typedef GError *(*notifier_send)(gpointer handle, const gchar *topic,
		const guint32 *key, GByteArray *data);
typedef void (*notifier_free)(gpointer handle);

struct notifier_s
{
	const gchar *type;
	gpointer handle;
	notifier_configure configure;
	notifier_free free;
	notifier_send send;
};


/**
 * Allocate and initialize a notification handle.
 */
void metautils_notif_pool_init(metautils_notif_pool_t **pool,
	const gchar *ns_name, struct grid_lbpool_s *lbpool);

/**
 * Clear a notification handle.
 */
void metautils_notif_pool_clear(metautils_notif_pool_t **notifier);


GError *metautils_notif_pool_configure_type(metautils_notif_pool_t *pool,
		namespace_info_t *nsinfo, const gchar *type, GSList *topics);

void metautils_notif_pool_clear_type(metautils_notif_pool_t *pool,
		const gchar *type);

/**
 * Send a raw notification to the specified topic.
 *
 * @param lb_key Pointer to a 32 bit integer helping for
 *   notification load balancing (can be NULL)
 */
GError *metautils_notif_pool_send_raw(metautils_notif_pool_t *pool,
	const gchar *topic, GByteArray *data, const guint32 *lb_key);

/**
 * Send a JSON notification to the specifier topic. The template requires
 * a source address and a type, and includes an autogenerated sequence number.
 *
 * @param lb_key Pointer to a 32 bit integer helping for
 *   notification load balancing (can be NULL)
 */
GError *metautils_notif_pool_send_json(metautils_notif_pool_t *pool,
	const gchar *topic, const gchar *src_addr, const char *notif_type,
	const gchar *notif_data, const guint32 *lb_key);

#endif // __REDCURRANT__metautils_notifications__h
