#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")

include_directories(BEFORE . .. ../..
		${CMAKE_CURRENT_BINARY_DIR}/../..)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/meta2.conf.in
		${CMAKE_CURRENT_BINARY_DIR}/meta2.conf @ONLY)

add_custom_command(
	OUTPUT autogenerated_handlers_meta2_services.c
	COMMAND ${PERL_EXECUTABLE}
	ARGS ${CMAKE_CURRENT_SOURCE_DIR}/../generator.pl --module=meta2_services --prefix=meta2 --tpldir=${CMAKE_CURRENT_SOURCE_DIR}/../templates --outdir=.  module
	DEPENDS
		${CMAKE_CURRENT_SOURCE_DIR}/../generator.pl
		${CMAKE_CURRENT_SOURCE_DIR}/../templates/handlers.tpl
		${CMAKE_CURRENT_SOURCE_DIR}/../templates/common.tpl
)

add_library(msg_meta2 MODULE
		event_wrappers.c event_wrappers.h
		${CMAKE_CURRENT_BINARY_DIR}/autogenerated_handlers_meta2_services.c
		maintenance.c
		events.c
		restore_wrapper.c restore_wrapper.h
		msg_meta2.c
)

set_target_properties(msg_meta2 PROPERTIES PREFIX "" SUFFIX .so)

target_link_libraries(msg_meta2
		meta2 metautils metacomm meta2remote
		${GLIB2_LIBRARIES})

install(FILES
			events.h
        DESTINATION include/meta2/module
        PERMISSIONS
            OWNER_WRITE OWNER_READ GROUP_READ WORLD_READ)

install(TARGETS msg_meta2
	LIBRARY DESTINATION ${GRIDD_PLUGINS_DIRECTORY}
	RUNTIME DESTINATION bin)


